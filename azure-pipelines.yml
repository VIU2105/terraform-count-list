trigger:
  branches:
   include:
     - main
     - features/*

variables:
  path: '$(System.DefaultWorkingDirectory)/Count with List'
  

jobs:
- job: terraform_install_and_init_and_fmt
  displayName: Build 
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: TerraformInstaller@1
    displayName: Terraform Install
    inputs:
      terraformVersion: 'latest'
  - task: TerraformTask@5
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: $(path)
      backendServiceArm: 'new-todo-yaml-pipeline-latest'
      backendAzureRmStorageAccountName: 'storagesliku22082025'
      backendAzureRmContainerName: 'tfstate'
      backendAzureRmKey: 'terraform.tfstate'
  - task: TerraformTask@5 
    inputs:
      provider: 'azurerm'
      command: 'custom'
      workingDirectory: $(path)
      outputTo: 'console'
      customCommand: 'fmt'
      environmentServiceNameAzureRM: 'new-todo-yaml-pipeline-latest'
  - task: TerraformTask@5
    inputs:
      provider: 'azurerm'
      command: 'validate'
      workingDirectory: $(path)
  - task: TerraformTask@5
    inputs:
      provider: 'azurerm'
      command: 'plan'
      workingDirectory: $(path)
      environmentServiceNameAzureRM: 'new-todo-yaml-pipeline-latest'
   
- job: Scanning_Job
  displayName: ScanningTool
  pool: pool-agent
  steps:
  - task: tfsec@1
    inputs:
      version: 'v1.26.0'
      dir: 'Count with List'
- job: Deploy
  displayName: Deploy the Infra
  pool: pool-agent
  dependsOn: terraform_install_and_init_and_fmt
  steps:
  - task: TerraformTask@5
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: $(path)
      environmentServiceNameAzureRM: 'new-todo-yaml-pipeline-latest'